/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MedicineDelivery;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.MedicineDelivery.MedicineDelivery;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EmergencyReport;
import Business.WorkQueue.EmergencyReportDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userInterface.loginPage;

/**
 *
 * @author chand
 */
public class MedicineDeliveryUI extends javax.swing.JPanel {
    
      private final JPanel container;
    private final EcoSystem ecoSystem;
    private final UserAccount ua;

    /**
     * Creates new form MedicineDeliveryUI
     */
    public MedicineDeliveryUI(JPanel container,EcoSystem ecoSystem,UserAccount ua) {
        initComponents();
        this.container=container;
        this.ecoSystem=ecoSystem;
        this.ua=ua;
        populate_table();
    }
    
     public void populate_table()
    {
        EmergencyReportDirectory red=ecoSystem.getErd();
        ArrayList<EmergencyReport> ol=red.getUser();
        int u=ol.size();
        System.out.println(u);
        for(int i=0;i<u;i++)
        {
            EmergencyReport o=ol.get(i);
            System.out.println(o.getEmergency());
            if(o.getEmergency().matches("Fire"))
            {
            
                DefaultTableModel t2 = (DefaultTableModel) jTable1.getModel();
                String s1=String.valueOf(o.getId());
                
                
                String s[]={s1,o.getName(),o.getEmergency(),o.getLocation(),o.getStatus(),o.getResponse()};
                t2.addRow(s);
            }
            
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnRespondMedicalDelivery = new javax.swing.JButton();
        btnFalseAlarmRespond = new javax.swing.JButton();
        btnCloseMedicalDelivery = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Emergency", "Location", "Status", "Response"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnRespondMedicalDelivery.setBackground(new java.awt.Color(195, 233, 245));
        btnRespondMedicalDelivery.setText("Respond");
        btnRespondMedicalDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRespondMedicalDeliveryActionPerformed(evt);
            }
        });

        btnFalseAlarmRespond.setBackground(new java.awt.Color(195, 233, 245));
        btnFalseAlarmRespond.setText("False Alarm");
        btnFalseAlarmRespond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFalseAlarmRespondActionPerformed(evt);
            }
        });

        btnCloseMedicalDelivery.setBackground(new java.awt.Color(195, 233, 245));
        btnCloseMedicalDelivery.setText("Close Case");
        btnCloseMedicalDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseMedicalDeliveryActionPerformed(evt);
            }
        });

        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel1.setText("go back");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnRespondMedicalDelivery)
                .addGap(177, 177, 177)
                .addComponent(btnFalseAlarmRespond)
                .addGap(137, 137, 137)
                .addComponent(btnCloseMedicalDelivery)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(482, 482, 482))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRespondMedicalDelivery)
                    .addComponent(btnFalseAlarmRespond)
                    .addComponent(btnCloseMedicalDelivery))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(72, 72, 72))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRespondMedicalDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRespondMedicalDeliveryActionPerformed
        // TODO add your handling code here:
        DefaultTableModel t2 = (DefaultTableModel) jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        if(selectedRow>=0)
        {
            int s=Integer.parseInt(t2.getValueAt(selectedRow, 0).toString());
            System.out.println("id"+s);
            EmergencyReportDirectory red=ecoSystem.getErd();
            ArrayList<EmergencyReport> ol=red.getUser();
            int u=ol.size();
            MedicineDelivery a=(MedicineDelivery)ua;
            for(int i=0;i<u;i++)
            {
                EmergencyReport o=ol.get(i);
                if(s==o.getId()/*&&o.getStatus().matches("Deliver Man Assigned")*/)
                {
                    if(o.getStatus().matches("Closed"))
                    {
                        JOptionPane.showMessageDialog(null, "Emergency Closed");
                    }
                    else if(o.getStatus().matches("False Alaram"))
                    {
                        JOptionPane.showMessageDialog(null, "Emergency is a false Alaram");
                    }
                    else if(o.getResponse().matches("No Response"))
                    {
                        o.setResponse(a.getUserName()+" "+"Responded");
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Already Responded!!");
                    }

                }

            }
            jTable1.setModel(new DefaultTableModel(null,new String[]{"ID","Name","Emergency","Location","Status","Response"}));
            populate_table();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Select a Row!!");
        }
    }//GEN-LAST:event_btnRespondMedicalDeliveryActionPerformed

    private void btnFalseAlarmRespondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFalseAlarmRespondActionPerformed
        // TODO add your handling code here:
        DefaultTableModel t2 = (DefaultTableModel) jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        if(selectedRow>=0)
        {
            int s=Integer.parseInt(t2.getValueAt(selectedRow, 0).toString());
            System.out.println("id"+s);
            EmergencyReportDirectory red=ecoSystem.getErd();
            ArrayList<EmergencyReport> ol=red.getUser();
            int u=ol.size();
            MedicineDelivery a=(MedicineDelivery)ua;
            for(int i=0;i<u;i++)
            {
                EmergencyReport o=ol.get(i);
                if(s==o.getId()/*&&o.getStatus().matches("Deliver Man Assigned")*/)
                {
                    if(o.getStatus().matches("Closed"))
                    {
                        JOptionPane.showMessageDialog(null, "Emergency Closed");
                    }
                    else if(o.getStatus().matches("False Alaram"))
                    {
                        JOptionPane.showMessageDialog(null, "Emergency is a false Alaram");
                    }
                    else if(o.getResponse().matches("No Response"))
                    {
                        JOptionPane.showMessageDialog(null, "respond to emergency");
                    }
                    else
                    {
                        o.setStatus("False Alaram");
                    }
                }

            }
            jTable1.setModel(new DefaultTableModel(null,new String[]{"ID","Name","Emergency","Location","Status","Response"}));
            populate_table();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Select a Row!!");
        }
    }//GEN-LAST:event_btnFalseAlarmRespondActionPerformed

    private void btnCloseMedicalDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseMedicalDeliveryActionPerformed
        // TODO add your handling code here:
        DefaultTableModel t2 = (DefaultTableModel) jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        if(selectedRow>=0)
        {
            int s=Integer.parseInt(t2.getValueAt(selectedRow, 0).toString());
            System.out.println("id"+s);
            EmergencyReportDirectory red=ecoSystem.getErd();
            ArrayList<EmergencyReport> ol=red.getUser();
            int u=ol.size();
            MedicineDelivery a=(MedicineDelivery)ua;
            for(int i=0;i<u;i++)
            {
                EmergencyReport o=ol.get(i);
                if(s==o.getId()/*&&o.getStatus().matches("Deliver Man Assigned")*/)
                {
                    if(o.getStatus().matches("Closed"))
                    {
                        JOptionPane.showMessageDialog(null, "Emergency Closed");
                    }
                    else if(o.getStatus().matches("False Alaram"))
                    {
                        JOptionPane.showMessageDialog(null, "Emergency is a false Alaram");
                    }
                    else if(o.getResponse().matches("No Response"))
                    {
                        JOptionPane.showMessageDialog(null, "respond to emergency");
                    }
                    else
                    {
                        o.setStatus("Closed");
                    }
                }

            }
            jTable1.setModel(new DefaultTableModel(null,new String[]{"ID","Name","Emergency","Location","Status","Response"}));
            populate_table();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Select a Row!!");
        }
    }//GEN-LAST:event_btnCloseMedicalDeliveryActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
//        backAction();
//        DB4OUtil.dB4OUtil.storeSystem(ecoSystem);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        backAction();
        DB4OUtil.dB4OUtil.storeSystem(ecoSystem);
    }//GEN-LAST:event_jLabel1MouseClicked

     private void backAction() {
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        loginPage manageSuppliersJPanel = (loginPage) component;        
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloseMedicalDelivery;
    private javax.swing.JButton btnFalseAlarmRespond;
    private javax.swing.JButton btnRespondMedicalDelivery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
