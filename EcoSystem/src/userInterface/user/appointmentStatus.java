/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.user;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OncologistAppointment;
import Business.WorkQueue.OncologistAppointmentDirectory;
import Business.WorkQueue.appointmentCheck;
import Business.user.User;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajay09
 */
public class appointmentStatus extends javax.swing.JPanel {
    private final JPanel container;
    private final EcoSystem ecosystem;
    private final UserAccount userAccount;


    /**
     * Creates new form appointmentStatuss
     */
    public appointmentStatus(JPanel container,EcoSystem ecosystem,UserAccount userAccount) {
        initComponents();
        this.container=container;
        this.ecosystem=ecosystem;
        this.userAccount=userAccount;
        populate_table();
       
    }
    
    public void populate_table()
    {
        OncologistAppointmentDirectory OAD= ecosystem.getOncologistAppointmentDirectory();
        ArrayList<OncologistAppointment> ol=OAD.getArray();
        int u =ol.size();
        System.out.println(u);
        for(int i=0;i<u;i++)
        {
            OncologistAppointment OA=ol.get(i);
            User d=(User)userAccount;
            System.out.println(OA.getUserID());
            System.out.println(d.getUserID());
            if(OA.getUserID().matches(d.getUserID()))
            {
            
                DefaultTableModel t2 = (DefaultTableModel) jTable1.getModel();
                String s1=String.valueOf(OA.getOncologistID());
                
                
                String s[]={s1,OA.getOncologistName(),OA.getLastName(),OA.getStatus(),OA.getDate(),OA.getTime()};
                t2.addRow(s);
            }
            
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        tblStatus = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCancelApp = new javax.swing.JButton();

        setBackground(new java.awt.Color(216, 235, 228));

        lblStatus.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(0, 51, 153));
        lblStatus.setText("Appointment Status");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Doctor Name", "Hospital", "Status", "Date", "Time"
            }
        ));
        tblStatus.setViewportView(jTable1);

        btnCancelApp.setBackground(new java.awt.Color(195, 233, 245));
        btnCancelApp.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnCancelApp.setText("Cancel Appointment");
        btnCancelApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblStatus)
                .addGap(280, 280, 280))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(btnCancelApp)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblStatus)
                .addGap(45, 45, 45)
                .addComponent(tblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnCancelApp)
                .addContainerGap(424, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAppActionPerformed
        // TODO add your handling code here:
        DefaultTableModel  t2 = (DefaultTableModel) jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        if(selectedRow>=0)
        {
            int s=Integer.parseInt(t2.getValueAt(selectedRow, 0).toString());
            System.out.println("id"+s);
            OncologistAppointmentDirectory red=ecosystem.getOncologistAppointmentDirectory();
            ArrayList<OncologistAppointment> ol=red.getArray();
            int u=ol.size();
            User a=(User)userAccount;
            for(int i=0;i<u;i++)
            {
                OncologistAppointment OA=ol.get(i);
                if(s==OA.getOncologistID()/*&&o.getStatus().matches("Deliver Man Assigned")*/)
                {
                    System.out.println(OA.getStatus());
                    if(OA.getStatus().matches("Appointment Booked"))
                    {
                        OA.setStatus("Canceled");
                        check(OA.getOncologistName(),OA.getDate(),OA.getTime());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Wrong Move!!");
                    }

                }

            }
            jTable1.setModel(new DefaultTableModel(null,new String[]{"Oncologist ID","Oncologist Name","Hospital","Status","Date","Time"}));
            populate_table();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Select A Row!!");
        }
        DB4OUtil.dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_btnCancelAppActionPerformed

    public void check(String s,String d1,String date)
    {
        boolean r=false;
        appointmentCheck check= ecosystem.getAppcheck();
        Map<String,List<String>> a=check.getPeopleByFirstName();
        for (Map.Entry mapElement : a.entrySet()) {
            if(mapElement.getKey().toString().matches(s))
            {
                List<String>a1=(List)mapElement.getValue();
                String s1=a1.get(0);
                String s2=a1.get(1);
                if(s1.matches(d1))
                {
                    if(s2.matches(date))
                    {
                        a.remove(s);
                    }
                }
            }
           
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelApp;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JScrollPane tblStatus;
    // End of variables declaration//GEN-END:variables
}
